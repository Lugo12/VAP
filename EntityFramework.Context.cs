//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VAP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VAP_ProjectEntities : DbContext
    {
        public VAP_ProjectEntities()
            : base("name=VAP_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<administrador> administrador { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<pedido> pedido { get; set; }
        public virtual DbSet<producto> producto { get; set; }
        public virtual DbSet<variantes_producto> variantes_producto { get; set; }
        public virtual DbSet<venta> venta { get; set; }
        public virtual DbSet<producto_seleccionado> producto_seleccionado { get; set; }
    
        public virtual int AgrgarProductoVenta(Nullable<int> cantidad, string idVariante)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var idVarianteParameter = idVariante != null ?
                new ObjectParameter("idVariante", idVariante) :
                new ObjectParameter("idVariante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgrgarProductoVenta", cantidadParameter, idVarianteParameter);
        }
    
        public virtual int CancelarPedido(Nullable<int> idPedido, Nullable<int> idCliente)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarPedido", idPedidoParameter, idClienteParameter);
        }
    
        public virtual ObjectResult<ComprobarPass_Result> ComprobarPass(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobarPass_Result>("ComprobarPass", correoParameter);
        }
    
        public virtual ObjectResult<CrearCliente_Result> CrearCliente(string nombre_cliente, string apellidos_cliente, Nullable<long> celular_cliente, string correo_cliente, string contraseña_cliente)
        {
            var nombre_clienteParameter = nombre_cliente != null ?
                new ObjectParameter("nombre_cliente", nombre_cliente) :
                new ObjectParameter("nombre_cliente", typeof(string));
    
            var apellidos_clienteParameter = apellidos_cliente != null ?
                new ObjectParameter("apellidos_cliente", apellidos_cliente) :
                new ObjectParameter("apellidos_cliente", typeof(string));
    
            var celular_clienteParameter = celular_cliente.HasValue ?
                new ObjectParameter("celular_cliente", celular_cliente) :
                new ObjectParameter("celular_cliente", typeof(long));
    
            var correo_clienteParameter = correo_cliente != null ?
                new ObjectParameter("correo_cliente", correo_cliente) :
                new ObjectParameter("correo_cliente", typeof(string));
    
            var contraseña_clienteParameter = contraseña_cliente != null ?
                new ObjectParameter("contraseña_cliente", contraseña_cliente) :
                new ObjectParameter("contraseña_cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrearCliente_Result>("CrearCliente", nombre_clienteParameter, apellidos_clienteParameter, celular_clienteParameter, correo_clienteParameter, contraseña_clienteParameter);
        }
    
        public virtual int CrearProducto(string txt_tipo_prenda, string txt_concepto_prenda, string txt_marca_prenda, Nullable<decimal> dec_precio_prenda, string img_blanco_prenda, string img_negro_prenda, string txt_estado_prenda)
        {
            var txt_tipo_prendaParameter = txt_tipo_prenda != null ?
                new ObjectParameter("txt_tipo_prenda", txt_tipo_prenda) :
                new ObjectParameter("txt_tipo_prenda", typeof(string));
    
            var txt_concepto_prendaParameter = txt_concepto_prenda != null ?
                new ObjectParameter("txt_concepto_prenda", txt_concepto_prenda) :
                new ObjectParameter("txt_concepto_prenda", typeof(string));
    
            var txt_marca_prendaParameter = txt_marca_prenda != null ?
                new ObjectParameter("txt_marca_prenda", txt_marca_prenda) :
                new ObjectParameter("txt_marca_prenda", typeof(string));
    
            var dec_precio_prendaParameter = dec_precio_prenda.HasValue ?
                new ObjectParameter("dec_precio_prenda", dec_precio_prenda) :
                new ObjectParameter("dec_precio_prenda", typeof(decimal));
    
            var img_blanco_prendaParameter = img_blanco_prenda != null ?
                new ObjectParameter("img_blanco_prenda", img_blanco_prenda) :
                new ObjectParameter("img_blanco_prenda", typeof(string));
    
            var img_negro_prendaParameter = img_negro_prenda != null ?
                new ObjectParameter("img_negro_prenda", img_negro_prenda) :
                new ObjectParameter("img_negro_prenda", typeof(string));
    
            var txt_estado_prendaParameter = txt_estado_prenda != null ?
                new ObjectParameter("txt_estado_prenda", txt_estado_prenda) :
                new ObjectParameter("txt_estado_prenda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearProducto", txt_tipo_prendaParameter, txt_concepto_prendaParameter, txt_marca_prendaParameter, dec_precio_prendaParameter, img_blanco_prendaParameter, img_negro_prendaParameter, txt_estado_prendaParameter);
        }
    
        public virtual int CrearVariante(string txt_color_prenda, string txt_talla_prenda, Nullable<int> int_cantidad_prenda, string idVariante, Nullable<int> idprenda)
        {
            var txt_color_prendaParameter = txt_color_prenda != null ?
                new ObjectParameter("txt_color_prenda", txt_color_prenda) :
                new ObjectParameter("txt_color_prenda", typeof(string));
    
            var txt_talla_prendaParameter = txt_talla_prenda != null ?
                new ObjectParameter("txt_talla_prenda", txt_talla_prenda) :
                new ObjectParameter("txt_talla_prenda", typeof(string));
    
            var int_cantidad_prendaParameter = int_cantidad_prenda.HasValue ?
                new ObjectParameter("int_cantidad_prenda", int_cantidad_prenda) :
                new ObjectParameter("int_cantidad_prenda", typeof(int));
    
            var idVarianteParameter = idVariante != null ?
                new ObjectParameter("idVariante", idVariante) :
                new ObjectParameter("idVariante", typeof(string));
    
            var idprendaParameter = idprenda.HasValue ?
                new ObjectParameter("idprenda", idprenda) :
                new ObjectParameter("idprenda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearVariante", txt_color_prendaParameter, txt_talla_prendaParameter, int_cantidad_prendaParameter, idVarianteParameter, idprendaParameter);
        }
    
        public virtual int CreaVentaNueva(Nullable<System.DateTime> fecha_pedido, Nullable<decimal> total_pedido, Nullable<int> id_cliente)
        {
            var fecha_pedidoParameter = fecha_pedido.HasValue ?
                new ObjectParameter("fecha_pedido", fecha_pedido) :
                new ObjectParameter("fecha_pedido", typeof(System.DateTime));
    
            var total_pedidoParameter = total_pedido.HasValue ?
                new ObjectParameter("total_pedido", total_pedido) :
                new ObjectParameter("total_pedido", typeof(decimal));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreaVentaNueva", fecha_pedidoParameter, total_pedidoParameter, id_clienteParameter);
        }
    
        public virtual int EditarInfCliente(Nullable<int> idcliente, string nomCliente, string apeCliente, Nullable<long> celClietne, string correoCliente)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nomClienteParameter = nomCliente != null ?
                new ObjectParameter("nomCliente", nomCliente) :
                new ObjectParameter("nomCliente", typeof(string));
    
            var apeClienteParameter = apeCliente != null ?
                new ObjectParameter("ApeCliente", apeCliente) :
                new ObjectParameter("ApeCliente", typeof(string));
    
            var celClietneParameter = celClietne.HasValue ?
                new ObjectParameter("celClietne", celClietne) :
                new ObjectParameter("celClietne", typeof(long));
    
            var correoClienteParameter = correoCliente != null ?
                new ObjectParameter("correoCliente", correoCliente) :
                new ObjectParameter("correoCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarInfCliente", idclienteParameter, nomClienteParameter, apeClienteParameter, celClietneParameter, correoClienteParameter);
        }
    
        public virtual ObjectResult<GetPedidos_Result> GetPedidos(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidos_Result>("GetPedidos", id_clienteParameter);
        }
    }
}
